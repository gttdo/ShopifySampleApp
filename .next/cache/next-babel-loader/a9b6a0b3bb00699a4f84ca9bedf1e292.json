{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!){\n        scriptTagCreate(input: $input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPT_TAGS = gql`\n    query{\n        scriptTags(first: 5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\nconst ScriptPage = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPT_TAGS);\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"These are the script tags right now:\"\n    }), data.scriptTags.edges.map(item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: item.node.id\n        })\n      }, item.node.id);\n    })]\n  });\n};\n\nexport default ScriptPage;","map":{"version":3,"sources":["D:/code/sample-shopify-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAGS","ScriptPage","loading","error","data","message","scriptTags","edges","map","item","node","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMI,iBAAiB,GAAGJ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAeA,MAAMK,UAAU,GAAG,MAAM;AAErB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BP,QAAQ,CAACG,iBAAD,CAAxC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ,IAAP;AAEX,sBACI;AAAA,4BACI;AAAA;AAAA,MADJ,EAGKD,IAAI,CAACE,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,IAAI,IAAI;AAC/B,0BACI;AAAA,+BACI;AAAA,oBAAIA,IAAI,CAACC,IAAL,CAAUC;AAAd;AADJ,SAAUF,IAAI,CAACC,IAAL,CAAUC,EAApB,CADJ;AAKH,KANA,CAHL;AAAA,IADJ;AAaH,CApBD;;AAsBA,eAAeV,UAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport {useQuery, useMutation} from '@apollo/react-hooks';\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!){\r\n        scriptTagCreate(input: $input){\r\n            scriptTag{\r\n                id\r\n            }\r\n            userErrors{\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst QUERY_SCRIPT_TAGS = gql`\r\n    query{\r\n        scriptTags(first: 5){\r\n            edges{\r\n                node{\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst ScriptPage = () => {\r\n\r\n    const {loading, error, data } = useQuery(QUERY_SCRIPT_TAGS)\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error.message}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>These are the script tags right now:</h1>\r\n\r\n            {data.scriptTags.edges.map(item => {\r\n                return(\r\n                    <div key={item.node.id}>\r\n                        <p>{item.node.id}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScriptPage;\r\n"]},"metadata":{},"sourceType":"module"}