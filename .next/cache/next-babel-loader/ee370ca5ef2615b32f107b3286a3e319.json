{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!){\n        scriptTagCreate(input: $input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPT_TAGS = gql`\n    query{\n        scriptTags(first: 5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\nconst DELETE_SCRIPT_TAG = gql`\n    mutation scriptTagDelete($id: ID!){\n        scriptTagDelete(id: $id){\n            deletedScriptTagId\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`;\n\nconst ScriptPage = () => {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPT_TAGS);\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  return /*#__PURE__*/_jsx(Page, {\n    children: /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(Layout.Section, {\n        children: /*#__PURE__*/_jsx(Card, {\n          title: \"These are the script tags:\",\n          sectioned: true,\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: \"Create or delete a script tag\"\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default ScriptPage;","map":{"version":3,"sources":["D:/code/sample-shopify-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAGS","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,YAApC,EAAkDC,KAAlD,QAA8D,kBAA9D;AAEA,MAAMC,iBAAiB,GAAGT,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMU,iBAAiB,GAAGV,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMW,iBAAiB,GAAGX,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAaA,MAAMY,UAAU,GAAG,MAAM;AAErB,QAAK,CAACC,aAAD,IAAkBX,WAAW,CAACO,iBAAD,CAAlC;AACA,QAAK,CAACK,aAAD,IAAkBZ,WAAW,CAACS,iBAAD,CAAlC;AACA,QAAM;AAACI,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BhB,QAAQ,CAACS,iBAAD,CAAxC;AAEA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ,IAAP;AAEX,sBACI,KAAC,IAAD;AAAA,2BACI,KAAC,MAAD;AAAA,6BACI,KAAC,MAAD,CAAQ,OAAR;AAAA,+BACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAC,4BAAZ;AAAyC,UAAA,SAAS,MAAlD;AAAA,iCACI;AAAA;AAAA;AADJ;AADJ;AADJ;AADJ,IADJ;AAaH,CAtBD;;AAwBA,eAAeN,UAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport {useQuery, useMutation} from '@apollo/react-hooks';\r\nimport {Button, Card, Layout, Page, ResourceList, Stack} from '@shopify/polaris';\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!){\r\n        scriptTagCreate(input: $input){\r\n            scriptTag{\r\n                id\r\n            }\r\n            userErrors{\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst QUERY_SCRIPT_TAGS = gql`\r\n    query{\r\n        scriptTags(first: 5){\r\n            edges{\r\n                node{\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n    mutation scriptTagDelete($id: ID!){\r\n        scriptTagDelete(id: $id){\r\n            deletedScriptTagId\r\n            userErrors{\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst ScriptPage = () => {\r\n\r\n    const[createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n    const[deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\r\n    const {loading, error, data } = useQuery(QUERY_SCRIPT_TAGS);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error.message}</div>;\r\n\r\n    return (\r\n        <Page>\r\n            <Layout>\r\n                <Layout.Section>\r\n                    <Card title=\"These are the script tags:\" sectioned>\r\n                        <p>\r\n                            Create or delete a script tag\r\n                        </p>\r\n                    </Card>\r\n                </Layout.Section>\r\n            </Layout>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default ScriptPage;\r\n"]},"metadata":{},"sourceType":"module"}