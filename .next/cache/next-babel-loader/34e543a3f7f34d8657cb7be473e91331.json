{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/code/sample-shopify-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getProducts($ids: [ID!]!){\\n    nodes(ids: $ids){\\n      ... on Product{\\n        title\\n        handle\\n        id\\n        images(first: 1){\\n          edges{\\n            node{\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1){\\n          edges{\\n            node{\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  console.log('this is data', data);\n  return /*#__PURE__*/_jsx(Card, {\n    children: /*#__PURE__*/_jsx(ResourceList, {\n      showHeader: true,\n      resourceName: {\n        singular: 'Product',\n        plural: 'Products'\n      },\n      items: data.nodes,\n      renderItem: function renderItem(item) {\n        var media = /*#__PURE__*/_jsx(Thumbnail, {\n          source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n          alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n        });\n\n        var price = item.variants.edges[0].node.price;\n        return /*#__PURE__*/_jsx(ResourceList.Item, {\n          id: item.id,\n          media: media,\n          accessibilityLabel: \"View details for \".concat(item.title),\n          children: /*#__PURE__*/_jsxs(Stack, {\n            children: [/*#__PURE__*/_jsx(Stack.Item, {\n              fill: true,\n              children: /*#__PURE__*/_jsx(\"h3\", {\n                children: /*#__PURE__*/_jsx(TextStyle, {\n                  variation: \"strong\",\n                  children: item.title\n                })\n              })\n            }), /*#__PURE__*/_jsx(Stack.Item, {\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"$\", price]\n              })\n            })]\n          })\n        });\n      }\n    })\n  });\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["D:/code/sample-shopify-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAAQC,IAAR,EAAcC,YAAd,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,SAA9C,QAA8D,kBAA9D;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA2BE,SAASS,WAAT,GAAsB;AAAA;;AAAA,kBAEaR,QAAQ,CAACO,kBAAD,EAAqB;AAACE,IAAAA,SAAS,EAAE;AAACC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAN;AAAZ,GAArB,CAFrB;AAAA,MAEZC,OAFY,aAEZA,OAFY;AAAA,MAEHC,KAFG,aAEHA,KAFG;AAAA,MAEIC,IAFJ,aAEIA,IAFJ;;AAIpB,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ,IAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B;AAEA,sBACE,KAAC,IAAD;AAAA,2BACE,KAAC,YAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,YAAY,EAAE;AAAEI,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAFhB;AAGE,MAAA,KAAK,EAAEL,IAAI,CAACM,KAHd;AAIE,MAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAClB,YAAMC,KAAK,gBACT,KAAC,SAAD;AACE,UAAA,MAAM,EAAGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACLH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WADrB,GAEL,EAHN;AAKE,UAAA,GAAG,EAAGL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACFH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OADnB,GAEF;AAPN,UADF;;AAYA,YAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,4BACI,KAAC,YAAD,CAAc,IAAd;AACE,UAAA,EAAE,EAAEP,IAAI,CAACS,EADX;AAEE,UAAA,KAAK,EAAER,KAFT;AAGE,UAAA,kBAAkB,6BAAsBD,IAAI,CAACU,KAA3B,CAHpB;AAAA,iCAKE,MAAC,KAAD;AAAA,oCACE,KAAC,KAAD,CAAO,IAAP;AAAY,cAAA,IAAI,MAAhB;AAAA,qCACE;AAAA,uCACE,KAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,QAArB;AAAA,4BACGV,IAAI,CAACU;AADR;AADF;AADF,cADF,eAQE,KAAC,KAAD,CAAO,IAAP;AAAA,qCACE;AAAA,gCAAKH,KAAL;AAAA;AADF,cARF;AAAA;AALF,UADJ;AAoBD;AAtCH;AADF,IADF;AA4CD;;GArDQpB,W;UAE0BR,Q;;;KAF1BQ,W;AAuDT,eAAeA,WAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {Card, ResourceList, Stack, TextStyle, Thumbnail} from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n    query getProducts($ids: [ID!]!){\r\n    nodes(ids: $ids){\r\n      ... on Product{\r\n        title\r\n        handle\r\n        id\r\n        images(first: 1){\r\n          edges{\r\n            node{\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1){\r\n          edges{\r\n            node{\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n\r\n  function ProductList(){\r\n\r\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, {variables: {ids: store.get('ids')}})\r\n\r\n    if (loading) return <div>Loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n\r\n    console.log('this is data', data)\r\n\r\n    return (\r\n      <Card>\r\n        <ResourceList\r\n          showHeader\r\n          resourceName={{ singular: 'Product', plural: 'Products'}}\r\n          items={data.nodes}\r\n          renderItem={item => {\r\n            const media = (\r\n              <Thumbnail\r\n                source={ item.images.edges[0] \r\n                  ? item.images.edges[0].node.originalSrc \r\n                  : ''\r\n                }\r\n                alt={ item.images.edges[0] \r\n                  ? item.images.edges[0].altText\r\n                  : ''\r\n                }\r\n              />\r\n            );\r\n            const price = item.variants.edges[0].node.price;\r\n            return(\r\n                <ResourceList.Item\r\n                  id={item.id}\r\n                  media={media}\r\n                  accessibilityLabel={`View details for ${item.title}`}\r\n                >\r\n                  <Stack>\r\n                    <Stack.Item fill>\r\n                      <h3>\r\n                        <TextStyle variation='strong'>\r\n                          {item.title}\r\n                        </TextStyle>\r\n                      </h3>\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <p>${price}</p>\r\n                    </Stack.Item>\r\n                  </Stack>\r\n                </ResourceList.Item>\r\n            )\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  export default ProductList;\r\n\r\n  "]},"metadata":{},"sourceType":"module"}