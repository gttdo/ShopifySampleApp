{"ast":null,"code":"import _slicedToArray from \"D:/code/sample-shopify-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/code/sample-shopify-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!){\\n        scriptTagDelete(id: $id){\\n            deletedScriptTagId\\n            userErrors{\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query{\\n        scriptTags(first: 5){\\n            edges{\\n                node{\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!){\\n        scriptTagCreate(input: $input){\\n            scriptTag{\\n                id\\n            }\\n            userErrors{\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPT_TAGS = gql(_templateObject2());\nvar DELETE_SCRIPT_TAG = gql(_templateObject3());\n\nvar ScriptPage = function ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPT_TAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPT_TAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    children: error.message\n  });\n  console.log('this is data:', data);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"These are the script tags right now:\"\n    }), /*#__PURE__*/_jsx(\"button\", {\n      type: \"submit\",\n      onClick: function onClick() {\n        createScripts({\n          variables: {\n            input: {\n              src: \"https://a30dd80893d0.ngrok.io/test-script.js\",\n              displayScope: \"ALL\"\n            }\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPT_TAGS\n          }]\n        });\n      },\n      children: \"Create Scrip Tag\"\n    }), data.scriptTags.edges.map(function (item) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          children: item.node.id\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          onClick: function onClick() {\n            deleteScripts({\n              variables: {\n                id: item.node.id\n              },\n              refetchQueries: [{\n                query: QUERY_SCRIPT_TAGS\n              }]\n            });\n          },\n          children: \"Delete Script Tag\"\n        })]\n      }, item.node.id);\n    })]\n  });\n};\n\n_s(ScriptPage, \"iqhspeQcVyYRQUjV1rXbLYn8j4k=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["D:/code/sample-shopify-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAGS","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","console","log","variables","input","src","displayScope","refetchQueries","query","scriptTags","edges","map","item","node","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAcA,IAAMI,iBAAiB,GAAGJ,GAAH,oBAAvB;AAcA,IAAMK,iBAAiB,GAAGL,GAAH,oBAAvB;;AAaA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,qBAEEJ,WAAW,CAACC,iBAAD,CAFb;AAAA;AAAA,MAEfI,aAFe;;AAAA,sBAGEL,WAAW,CAACG,iBAAD,CAHb;AAAA;AAAA,MAGfG,aAHe;;AAAA,kBAIWP,QAAQ,CAACG,iBAAD,CAJnB;AAAA,MAIdK,OAJc,aAIdA,OAJc;AAAA,MAILC,KAJK,aAILA,KAJK;AAAA,MAIEC,IAJF,aAIEA,IAJF;;AAMrB,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ,IAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,IAA7B;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA,MADJ,eAEI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAE,mBAAM;AACXJ,QAAAA,aAAa,CAAC;AACVQ,UAAAA,SAAS,EAAE;AACPC,YAAAA,KAAK,EAAE;AACHC,cAAAA,GAAG,EAAE,8CADF;AAEHC,cAAAA,YAAY,EAAE;AAFX;AADA,WADD;AAOVC,UAAAA,cAAc,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAEhB;AAAT,WAAD;AAPN,SAAD,CAAb;AASH,OAZL;AAAA;AAAA,MAFJ,EAiBKO,IAAI,CAACU,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI,EAAI;AAC/B,0BACI;AAAA,gCACI;AAAA,oBAAIA,IAAI,CAACC,IAAL,CAAUC;AAAd,UADJ,eAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAE,mBAAM;AACXlB,YAAAA,aAAa,CAAC;AACVO,cAAAA,SAAS,EAAE;AACPW,gBAAAA,EAAE,EAAEF,IAAI,CAACC,IAAL,CAAUC;AADP,eADD;AAIVP,cAAAA,cAAc,EAAE,CAAC;AAACC,gBAAAA,KAAK,EAAEhB;AAAR,eAAD;AAJN,aAAD,CAAb;AAMH,WATL;AAAA;AAAA,UAFJ;AAAA,SAAUoB,IAAI,CAACC,IAAL,CAAUC,EAApB,CADJ;AAkBH,KAnBA,CAjBL;AAAA,IADJ;AAwCH,CAnDD;;GAAMpB,U;UAEqBJ,W,EACAA,W,EACSD,Q;;;KAJ9BK,U;AAqDN,eAAeA,UAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport {useQuery, useMutation} from '@apollo/react-hooks';\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!){\r\n        scriptTagCreate(input: $input){\r\n            scriptTag{\r\n                id\r\n            }\r\n            userErrors{\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst QUERY_SCRIPT_TAGS = gql`\r\n    query{\r\n        scriptTags(first: 5){\r\n            edges{\r\n                node{\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n    mutation scriptTagDelete($id: ID!){\r\n        scriptTagDelete(id: $id){\r\n            deletedScriptTagId\r\n            userErrors{\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst ScriptPage = () => {\r\n\r\n    const[createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n    const[deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\r\n    const {loading, error, data } = useQuery(QUERY_SCRIPT_TAGS);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error.message}</div>;\r\n\r\n    console.log('this is data:', data)\r\n\r\n    return (\r\n        <div>\r\n            <h1>These are the script tags right now:</h1>\r\n            <button\r\n                type='submit' \r\n                onClick={() => {\r\n                    createScripts({ \r\n                        variables: {\r\n                            input: {\r\n                                src: \"https://a30dd80893d0.ngrok.io/test-script.js\", \r\n                                displayScope: \"ALL\"\r\n                            }\r\n                        },\r\n                        refetchQueries: [{ query: QUERY_SCRIPT_TAGS}]\r\n                    })\r\n                }}\r\n            >Create Scrip Tag</button>\r\n\r\n            {data.scriptTags.edges.map(item => {\r\n                return(\r\n                    <div key={item.node.id}>\r\n                        <p>{item.node.id}</p>\r\n                        <button \r\n                            type='submit'\r\n                            onClick={() => {\r\n                                deleteScripts({\r\n                                    variables: {\r\n                                        id: item.node.id\r\n                                    },\r\n                                    refetchQueries: [{query: QUERY_SCRIPT_TAGS}]\r\n                                })\r\n                            }}\r\n                        >\r\n                            Delete Script Tag\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScriptPage;\r\n"]},"metadata":{},"sourceType":"module"}